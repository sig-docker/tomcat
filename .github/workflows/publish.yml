name: Publish to Docker Hub

on:
  push:
  schedule:
    - cron: '23 12 * * *'
  workflow_dispatch:

jobs:
  prep:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      
      - name: Compute which base tags to build
        id: set-matrix
        run: echo "::set-output name=matrix::$(bash build/get_base_tags.sh)"
    
  build:
    needs: prep
    if: ${{ contains(needs.prep.outputs.matrix, '"') }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        baseTag: ${{ fromJson(needs.prep.outputs.matrix) }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        
      - name: Get short commit hash
        id: shortSha
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
        
      - name: Get Tomcat major version
        id: tcMajorVer
        run: echo "::set-output name=major_ver::$(echo '${{ matrix.baseTag }}' |cut -d '.' -f 1)"

      - name: Get Tomcat JDK version
        id: tcJdkVer
        run: echo "::set-output name=jdk_ver::$(echo '${{ matrix.baseTag }}' |cut -d - -f 2)"
        
      - name: Update Dockerfile
        run: sed -ie 's/^FROM .*/FROM tomcat:${{ matrix.baseTag }}/g' Dockerfile
        
      - name: Check Dockerfile
        run: grep FROM Dockerfile
      
      - name: Docker Login
        uses: docker/login-action@v1.9.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build image
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: sigcorp/tomcat:${{ matrix.baseTag }}-${{ steps.shortSha.outputs.sha_short }}

      # - name: Test startup configuration
      #   run: |
      #     docker run --rm \
      #       -e TOMCAT_MEMORY_ARGS='-Xms1024m -Xmx2048m' \
      #       -e TCDS_BP_JDBC_URL='jdbc:oracle:thin:@db.school.edu:1521:PROD' \
      #       -e TCDS_BP_USER='banproxy' \
      #       -e TCDS_BP_JNDI_NAME='jdbc/bannerDataSource' \
      #       -e TCDS_BP_PASSWORD='super_secret' \
      #       -e CENSOR_ANSIBLE_OUTPUT='no' \
      #       -e TEST_CONF_ONLY='y'  \
      #       sigcorp/tomcat:${{ matrix.baseTag }}-${{ steps.shortSha.outputs.sha_short }}

      # TODO: I think we want to switch to scanning inside Docker Hub instead
      #       because that'll allow us to also monitor new vulnerabilities in
      #       old images.          
      # - name: Scan for vulnerabilities
      #   uses: azure/container-scan@v0
      #   with:
      #     image-name: sigcorp/tomcat:${{ matrix.baseTag }}-${{ steps.shortSha.outputs.sha_short }}

      - name: Push to Docker Hub
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            sigcorp/tomcat:${{ matrix.baseTag }}
            sigcorp/tomcat:${{ matrix.baseTag }}-${{ steps.shortSha.outputs.sha_short }}
            sigcorp/tomcat:${{ matrix.baseTag }}-${{ github.run_number }}
            sigcorp/tomcat:latest-${{ steps.tcMajorVer.outputs.major_ver }}-${{ steps.tcJdkVer.outputs.jdk_ver }}
